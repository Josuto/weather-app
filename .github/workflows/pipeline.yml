name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  run-tests:
    runs-on: ubuntu-latest
    name: Validate code
    steps:
      - name: Code Checkout 🛎️
        uses: actions/checkout@v3
      - name: Setup Node 🕸️
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Install dependencies 💾
        run: yarn install
      - name: Run tests 🚦
        run: yarn test --ci --reporters=default --reporters=jest-junit --coverage
      - name: Generate test results badge 🥇
        run: |
          all_tests=$(grep -oP 'tests="\K\d+' ./test-results/junit.xml | head -1)
          failed=$(grep -oP 'failures="\K\d+' ./test-results/junit.xml | head -1)
          passed=$(($all_tests-$failed))
          [ $failed = 0 ] && result="success" || result="red"
          URL="https://img.shields.io/badge/tests-$passed%20passed,%20$failed%20failed-${result}.svg"
          mkdir -p ./badges
          curl -s -o ./badges/badge-test-results.svg $URL
      - name: Generate test coverage badge 🥈
        run: |
          export PATH="$PATH:$(pwd)/node_modules/.bin"
          cat ./coverage/lcov.info | coverbadge -o ./badges/badge-test-coverage.svg
      - name: Commit generated badges ⬆️
        run: |
          git config --global user.name 'Automated CI'
          git config --global user.email '6097850+Josuto@users.noreply.github.com'
          git add .
          git diff-index --quiet HEAD || git commit -m "Updated test badges [skip ci]"
          git push origin main --no-verify
  deploy:
    needs: [ run-tests ]
    runs-on: ubuntu-latest
    name: Deploy to Vercel
    steps:
      - name: Code Checkout 🛎️
        uses: actions/checkout@v3
      - name: Install Vercel CLI 💾
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information ⬇️
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts 🔧
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel ⬆️
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
