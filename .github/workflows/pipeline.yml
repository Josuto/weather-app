name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - main
jobs:
  validate:
    runs-on: ubuntu-latest
    name: Validate code
    steps:
      - name: Code Checkout 🛎️
        uses: actions/checkout@v3
      - name: Setup Node 🕸️
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Run tests 🚦
        run: |
          npm ci
          npm test
      #          yarn install
      #          yarn test --watchAll=false
      - name: Test Reporter 🖊️
        uses: dorny/test-reporter@v1.6.0
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Jest Tests            # Name of the check run which will be created
          path: reports/jest-*.xml    # Path to test results
          reporter: jest-junit        # Format of test results
  deploy:
    needs: [ validate ]
    runs-on: ubuntu-latest
    name: Deploy to Vercel
    steps:
      - name: Code Checkout 🛎️
        uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
